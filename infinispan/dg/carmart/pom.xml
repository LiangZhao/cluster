<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.kylin.infinispan</groupId>
    <artifactId>infinispan-stu-dg-carmart</artifactId>
    <version>1.0</version>
    <packaging>war</packaging>
    <name>CarMart Single Node (No Cluster)</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <infinispan.version>5.2.0.Beta6</infinispan.version>

        <!-- other plugin versions -->
        <compiler.plugin.version>2.3.2</compiler.plugin.version>
        <buildhelper.plugin.version>1.7</buildhelper.plugin.version>
        <war.plugin.version>2.2</war.plugin.version>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.6</maven.compiler.target>
        <maven.compiler.source>1.6</maven.compiler.source>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-infinispan</artifactId>
                <version>1.0.1.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- First declare the APIs we depend on and need for compilation. 
            The dependencies with provided scope are provided by JBoss AS 7, The other 
            compile scoped dependencies will be add to the application libraries -->

        <!-- Import the JSF API, we use provided scope as the API is included 
            in JBoss AS 7 -->
        <dependency>
            <groupId>org.jboss.spec.javax.faces</groupId>
            <artifactId>jboss-jsf-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the CDI API, we use provided scope as the API is included 
            in JBoss AS 7 -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

	<dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-core</artifactId>
         <version>${infinispan.version}</version>
      </dependency>

     <dependency>
         <groupId>com.kylin.infinispan</groupId>
         <artifactId>infinispan-stu-common</artifactId>
         <version>${project.version}</version>
      </dependency>

        <!-- Import Prettyfaces dependency. This is a UNSUPPORTED component -->
        <dependency>
            <groupId>com.ocpsoft</groupId>
            <artifactId>prettyfaces-jsf2</artifactId>
            <version>3.3.2</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- Maven will append the version to the finalName (which is the 
            name given to the generated war, and hence the context root) -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- Compiler plugin enforces Java 1.6 compatibility and activates 
                annotation processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler.plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${war.plugin.version}</version>
                <configuration>
                    <!-- Java EE 6 doesn't require web.xml, Maven needs to 
                        catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <!-- This is the default profile (active by default) that uses the 
            src/local/java folder which provided local access to the cache (library mode) -->
        <profile>
            <id>library-jbossas</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                </plugins>
            </build>
        </profile>


        <!-- This profile enable the client/server mode. The code from src/remote/java 
            will be used instead and them all connections to the cache will be made in 
            a remote JDG running instance -->
        <profile>
            <id>remote</id>
            <!-- To connect to remote JDG, it is necessary to add the Hot 
                Rod client -->
            <dependencies>
                <dependency>
                    <groupId>org.infinispan</groupId>
                    <artifactId>infinispan-client-hotrod</artifactId>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                </plugins>
            </build>
        </profile>


        <profile>
            <!-- This profile is intended to run this quickstart on ews/tomcat. 
                It has to embed some libraries that aren't available on ews/tomcat. -->
            <id>library-tomcat</id>
            <dependencies>

                <!-- Import the JSF 2.1 API -->
                <dependency>
                    <groupId>org.jboss.spec.javax.faces</groupId>
                    <artifactId>jboss-jsf-api_2.1_spec</artifactId>
                    <scope>compile</scope>
                </dependency>

                <!-- Import the WELD "uber-jar", meaning it bundles all the 
                    bits of Weld and CDI required for running in a Servlet container, for your 
                    convenience -->
                <dependency>
                    <groupId>org.jboss.weld.servlet</groupId>
                    <artifactId>weld-servlet</artifactId>
                    <version>1.1.8.Final</version>
                </dependency>

                <!-- Import the Mojarra JSF Impl, we use runtime scope as 
                    the Impl is not included in ews/tomcat -->
                <dependency>
                    <groupId>com.sun.faces</groupId>
                    <artifactId>jsf-impl</artifactId>
                    <version>2.0.2</version>
                    <scope>runtime</scope>
                </dependency>

            </dependencies>
            <build>
                <plugins>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>

