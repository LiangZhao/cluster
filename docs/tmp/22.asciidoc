高级概念和协议栈
----------------

本章讨论了一些 JGroups 的高级概念，包括怎么样正确使用和配置。以及协议栈协议。

使用多通道
++++++++++

当使用一个完全虚拟的同步协议栈，性能可能不会是很好，因为消息需要在大量的协议之间传递。然而，对于某些应用，吞吐量比传递顺序更重要，例如视频/音频流，在这样的情况下我们可以使用多通道。

同一个 JVM 中多个通道共享一个传输协议
+++++++++++++++++++++++++++++++++++++ 
传输层几乎占有协议栈中所有资源，传输层的实现是相当昂贵的，我们使用了三个线程池：默认线程池，OOB线程池，时间统计线程池，特别如果我们在同一个JVM中创建多个通道，共享传输层有利于资源利用和性能的提升。打一个比方，如果我们在同一个JVM中创建4个通道（JBoss是这种模式），如果我们不共享传输层我们则需要12个线程池，而我们共享传输层我们就只需要3个线程池。共享传输协议我们需要做如下配置：
<UDP ...
singleton_name="tp_one"
/>

传输协议
++++++++
传输协议是协议栈最底层的协议，它负责从物理网络环境接收消息和向物理网络环境接收消息。传输层协议主要包括UDP,TCP,TUNNEL。UDP使用IP多波发送和接收数据，是默认推荐的传输层协议。

消息捆绑
++++++++
当发送一些连续的小消息时，消息捆绑是有用的，将小消息保存直到达到某特定大小或消息捆绑超时后再发送，而在接收端将捆绑的消息重新分散传递。消息捆绑配置如下：
<UDP
enable_bundling="true"
max_bundle_size="64K"
max_bundle_timeout="30"
/>
JGroups默认允许消息捆绑，消息捆绑的大小为64000字节，超时时间为30毫秒。JGroups提供API接口指定是否进行消息捆绑，RequestOptions.setFlags(Message.DONT_BUNDLE)可以使要发送的消息不进行消息捆绑发送机制，例如DONT_BUNDLE标记的消息会立即发送。




